function sumPrimes(num) {
  let primes = [];
  let sets = [];
  let arr1 = [];
  for (let i =2n; i< 23n; i++) {
    if (i % 2n !== 0n && i%3n !== 0n || i == 2n || i == 3n || i ==5n || i == 7n){
      primes.push(i);
    }
  }
  for (let j = 2n; j<=num; j++) {
    sets.push(j);
  }
  for (let k = 0n; k< sets.length; k++) {
    for (let z=0n; z<primes.length; z++) {
      if (sets[k]%primes[z] == 0n) {
        arr1.push(sets[k]);
      }
    }
    if (arr1.length == 0n) {
      primes.push(sets[k]);
    }
    arr1 = [];
  }
  return primes;
};

function sift(num) {
  num = BigInt(num);
  let primes = sumPrimes(num);
  let answer = [];
  for (let i = BigInt(primes.length)-1n; i>=0n; i--) {
    if (num%primes[i] === 0n) {
      answer.push(primes[i]);
    } 
  }
  if (answer[0] === num) {
    return "it's prime!" 
    } else {
    answer = answer.map((a)=>Number(a));
    return {
      primeFactors: answer,
      highestPrimeFactor: answer[0]
  }
}
}

console.log(sift(997n));
